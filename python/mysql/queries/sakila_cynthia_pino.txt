show databases;
use sakila;
show tables;

#1. ¿Qué consulta ejecutarías para obtener todos los clientes dentro de ciudad_id = 312? 
#Tu consulta debe devolver el nombre, apellido, correo electrónico y dirección del cliente.

select customer.first_name as Nombre, customer.last_name as Apellido, customer.email as email, address.address as dirección from customer
join address on address.address_id = customer.address_id
where address.city_id = 312;

#2. ¿Qué consulta ejecutarías para obtener todas las películas de comedias?
# Tu consulta debe devolver el título de la película, la descripción, el año de lanzamiento,
# la clasificación, las características especiales y el género (categoría).

select film_list.title as Titulo_pelicula, film_list.description as Descripción, film.release_year as Año_lanzamiento,
film.special_features as Carasterísticas_especiales, film_list.category as Género from film_list
join film on film.film_id = film_list.FID
where category ='Comedy';

#3. ¿Qué consulta ejecutarías para obtener todas las películas por actor_id=5?
# Tu consulta debe devolver el id del actor, el nombre del actor, el título de la película,
# la descripción y el año de lanzamiento.

select actor.actor_id, actor.first_name, actor.last_name, film.title, film.description, film.release_year from film_actor
join film on film.film_id = film_actor.film_id
join actor on actor.actor_id = film_actor.actor_id
where film_actor.actor_id = 5;

#4. ¿Qué consulta ejecutarías para obtener todos los clientes en store_id=1 y dentro de estas ciudades
# (1, 42, 312 y 459)? Tu consulta debe devolver el nombre, apellido, correo electrónico y dirección del cliente.


select customer.first_name as Nombre, customer.last_name as Apellido, customer.email as email, address.city_id from customer
join store on store.store_id = customer.store_id
join address on address.address_id = customer.address_id
where customer.store_id = 1 and (address.city_id = 1 or address.city_id = 42 or address.city_id = 312 or address.city_id = 459) ;

#5. ¿Qué consulta ejecutarías para obtener todas las películas con una "calificación = G"
# y una "característica especial = detrás de escena", unidas por actor_id = 15?  
# Tu consulta debe devolver el título de la película, la descripción, el año de lanzamiento,
# la clasificación y la característica especial. Sugerencia: puede usar la función LIKE para obtener la parte 
#“detrás de escena”.

select film.title as Titulo, film.description as Descripcion, film.release_year as Año_lanzamiento, 
film.rating as Clasificación, film.special_features as Caracteristicas_especial, film_actor.actor_id from actor
join film_actor on film_actor.actor_id = actor.actor_id
join film on film.film_id = film_actor.film_id
where film.rating ='G'and actor.actor_id=15 and 
film.special_features like '%Behind the Scenes%';

#6. ¿Qué consulta ejecutarías para obtener todos los actores que se unieron al film_id = 369?
# Tu consulta debe devolver film_id, título, actor_id y actor_name.

select film.film_id, film.title, actor.actor_id, actor.first_name, actor.last_name from film_actor
join film on film.film_id = film_actor.film_id
join actor on actor.actor_id = film_actor.actor_id
where film.film_id =369;
#7. ¿Qué consulta ejecutarías para obtener todas las películas de drama con una tarifa de arriendo de 2,99? 
#Tu consulta debe devolver el título de la película, la descripción, el año de lanzamiento, la clasificación,
# las características especiales y el género (categoría).
 
select film.title, film.description, film.release_year, film_list.category , film.special_features, film.rating from inventory
join film on film.film_id = inventory.film_id
join rental on rental.inventory_id = inventory.inventory_id
join payment on payment.rental_id = rental.rental_id
join film_list on film_list.FID = film.film_id
where payment.amount =2.99 and film_list.category ='Drama';

#8. ¿Qué consulta ejecutarías para obtener todas las películas de acción que estén unidas por SANDRA KILMER? 
#Tu consulta debe devolver el título de la película, la descripción, el año de lanzamiento, 
#la clasificación, las características especiales, el género (categoría) y el nombre y apellido del actor.

select film.title, film.description, film.release_year, film.special_features, film_list.category, actor.first_name, actor.last_name from film_actor
join actor on actor.actor_id = film_actor.actor_id
join film on film.film_id = film_actor.film_id
join film_list on film_list.FID = film.film_id
where actor.first_name = 'Sandra' and actor.last_name ='Kilmer';